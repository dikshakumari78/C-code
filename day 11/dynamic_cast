#include <iostream>
class Base {
public:
virtual void display() {
std::cout << "Base class" << std::endl;
 }
 virtual ~Base() {}  
};
class Derived1 : public Base {
public:
void display() override {
std::cout << "Derived class 1" << std::endl;
 }
};
class Derived2 : public Base {
public:
void display() override {
std::cout << "Derived class 2" << std::endl;
}
};
int main() {
Base* base_ptr = new Derived1();
Derived1* derived1_ptr = dynamic_cast<Derived1*>(base_ptr);
if (derived1_ptr) {
std::cout << "Dynamic cast to Derived1 successful:" << std::endl;
derived1_ptr->display();
 }
 else
 {
  std::cout << "Dynamic cast to Derived1 failed!" << std::endl;
}
Derived2* derived2_ptr = dynamic_cast<Derived2*>(base_ptr);
if (derived2_ptr) {
std::cout << "Dynamic cast to Derived2 successful:" << std::endl;
derived2_ptr->display();
}
else
{
std::cout << "Dynamic cast to Derived2 failed!" << std::endl;
}
delete base_ptr;
return 0;
}
